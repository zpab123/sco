// Code generated by protoc-gen-go. DO NOT EDIT.
// source: handler.proto

package protocol

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// client->server 请求数据
type HandlerReq struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HandlerReq) Reset()         { *m = HandlerReq{} }
func (m *HandlerReq) String() string { return proto.CompactTextString(m) }
func (*HandlerReq) ProtoMessage()    {}
func (*HandlerReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_handler_025b053a6cb6ade5, []int{0}
}
func (m *HandlerReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HandlerReq.Unmarshal(m, b)
}
func (m *HandlerReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HandlerReq.Marshal(b, m, deterministic)
}
func (dst *HandlerReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HandlerReq.Merge(dst, src)
}
func (m *HandlerReq) XXX_Size() int {
	return xxx_messageInfo_HandlerReq.Size(m)
}
func (m *HandlerReq) XXX_DiscardUnknown() {
	xxx_messageInfo_HandlerReq.DiscardUnknown(m)
}

var xxx_messageInfo_HandlerReq proto.InternalMessageInfo

func (m *HandlerReq) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

// server->client 回复数据
type HandlerRes struct {
	Right                bool     `protobuf:"varint,1,opt,name=right,proto3" json:"right,omitempty"`
	Data                 []byte   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HandlerRes) Reset()         { *m = HandlerRes{} }
func (m *HandlerRes) String() string { return proto.CompactTextString(m) }
func (*HandlerRes) ProtoMessage()    {}
func (*HandlerRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_handler_025b053a6cb6ade5, []int{1}
}
func (m *HandlerRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HandlerRes.Unmarshal(m, b)
}
func (m *HandlerRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HandlerRes.Marshal(b, m, deterministic)
}
func (dst *HandlerRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HandlerRes.Merge(dst, src)
}
func (m *HandlerRes) XXX_Size() int {
	return xxx_messageInfo_HandlerRes.Size(m)
}
func (m *HandlerRes) XXX_DiscardUnknown() {
	xxx_messageInfo_HandlerRes.DiscardUnknown(m)
}

var xxx_messageInfo_HandlerRes proto.InternalMessageInfo

func (m *HandlerRes) GetRight() bool {
	if m != nil {
		return m.Right
	}
	return false
}

func (m *HandlerRes) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*HandlerReq)(nil), "protocol.HandlerReq")
	proto.RegisterType((*HandlerRes)(nil), "protocol.HandlerRes")
}

func init() { proto.RegisterFile("handler.proto", fileDescriptor_handler_025b053a6cb6ade5) }

var fileDescriptor_handler_025b053a6cb6ade5 = []byte{
	// 102 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xcd, 0x48, 0xcc, 0x4b,
	0xc9, 0x49, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x00, 0x53, 0xc9, 0xf9, 0x39,
	0x4a, 0x0a, 0x5c, 0x5c, 0x1e, 0x10, 0xa9, 0xa0, 0xd4, 0x42, 0x21, 0x21, 0x2e, 0x96, 0x94, 0xc4,
	0x92, 0x44, 0x09, 0x46, 0x05, 0x46, 0x0d, 0x9e, 0x20, 0x30, 0x5b, 0xc9, 0x0c, 0x49, 0x45, 0xb1,
	0x90, 0x08, 0x17, 0x6b, 0x51, 0x66, 0x7a, 0x46, 0x09, 0x58, 0x09, 0x47, 0x10, 0x84, 0x03, 0xd7,
	0xc7, 0x84, 0xd0, 0x97, 0xc4, 0x06, 0xb6, 0xc3, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0xb2, 0xd2,
	0x85, 0x7c, 0x7b, 0x00, 0x00, 0x00,
}
